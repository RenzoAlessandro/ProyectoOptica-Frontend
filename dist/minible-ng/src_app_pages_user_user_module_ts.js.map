{"version":3,"file":"src_app_pages_user_user_module_ts.js","mappings":"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","sources":["./src/app/pages/user/adduser/adduser.component.ts","./src/app/pages/user/adduser/adduser.component.html","./src/app/pages/user/list-users/list-users.component.ts","./src/app/pages/user/list-users/list-users.component.html","./src/app/pages/user/list-users/list-users.service.ts","./src/app/pages/user/list-users/sortable.directive.ts","./src/app/pages/user/user-routing.module.ts","./src/app/pages/user/user.module.ts","./src/models/user.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\nimport { SedesModel } from 'src/models/sedes';\r\nimport { UsersModel } from 'src/models/user';\r\nimport { Sweetalert } from '../../../../utils/sweetalert';\r\n\r\n@Component({\r\n  selector: 'app-adduser',\r\n  templateUrl: './adduser.component.html',\r\n  styleUrls: ['./adduser.component.scss']\r\n})\r\nexport class AdduserComponent implements OnInit {\r\n\r\n  // bread crumb items\r\n  // Hola\r\n  breadCrumbItems: Array<{}>;\r\n  formRegister: FormGroup;\r\n  nombres: string = \"campoNombres\";\r\n  apellidos: string = \"campoApellidos\";\r\n  dni: string = \"campoDNI\";\r\n  rol: string = \"campoRol\";\r\n  sede: string = \"campoSede\";\r\n  telefono: string = \"campoTelefono\";\r\n  password: string = \"campoPassword\";\r\n  fechaNacimiento: string = \"campoFechaNacimiento\";\r\n  repeatPassword: string = \"campoRepeatPassword\";\r\n  fechaCreacion: string = \"campoFechaCreacion\";\r\n  email: string = \"campoEmail\";\r\n  observaciones: string = \"campoObservaciones\";\r\n  listRoles = [\r\n    { cNombre:1, tNombre: \"Admin\" },\r\n    { cNombre:2, tNombre: \"Vendedor\" },\r\n    //{ cNombre:3, tNombre: \"Contador\" }\r\n  ];\r\n  listSedes: SedesModel[] = [];\r\n  user= new UsersModel;\r\n  lettersPattern = '[a-zA-ZñÑáéíóúÁÉÍÓÚ ]*'; // Incluimos Ññ y tildes en cada vocal\r\n  numberPattern = '^[0-9]+$|^\\S*$';\r\n\r\n  /* passwordPattern = '/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*#?&^_-]).{6,}$/'; \r\n  Una contraseña se considera válida si se cumplen todas las siguientes restricciones:\r\n    - Contiene al menos 6 caracteres y como máximo 20 caracteres.\r\n    - Contiene al menos un dígito.\r\n    - Contiene al menos un alfabeto en mayúsculas.\r\n    - Contiene al menos un alfabeto en minúsculas.\r\n    - Contiene al menos un carácter especial que incluye @$!%*#?&^_-  \r\n    - Si contiene espacio en blanco.\r\n  */\r\n  fecha_actual: Date;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private usuarioService: UsuarioService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.breadCrumbItems = [{ label: 'Usuarios' }, { label: 'Añadir Usuarios', active: true }];\r\n    this.crearFormulario();\r\n    this.getListSedes();\r\n  }\r\n\r\n  crearFormulario(){\r\n    this.fecha_actual = new Date(Date.now());\r\n    this.formRegister = this.fb.group({\r\n      [this.nombres]:[null,[\r\n        Validators.required,\r\n        Validators.pattern(this.lettersPattern),\r\n        Validators.minLength(3),\r\n        Validators.maxLength(40)\r\n      ]],\r\n      [this.apellidos]:[null,[\r\n        Validators.required,\r\n        Validators.pattern(this.lettersPattern),\r\n        Validators.minLength(3),\r\n        Validators.maxLength(40)\r\n      ]],\r\n      [this.dni]:[null,[\r\n        Validators.required,\r\n        Validators.pattern(this.numberPattern),\r\n        Validators.min(11111111),\r\n        Validators.max(99999999)\r\n      ]],\r\n      rol:[this.listRoles[0].tNombre],\r\n      [this.email]:[null,[\r\n        Validators.email\r\n      ]],\r\n      [this.observaciones]:[null,[\r\n      ]],\r\n      [this.telefono]:[null,[\r\n        Validators.pattern(this.numberPattern),\r\n        Validators.min(111111111),\r\n        Validators.max(999999999)\r\n      ]],\r\n      [this.fechaNacimiento]:[null,[\r\n        //Validators.required\r\n      ]],\r\n      [this.fechaCreacion]:[{value:this.fecha_actual.toLocaleDateString(), disabled: true}],\r\n      sede:[],\r\n      [this.password]:[null,[\r\n        Validators.required,\r\n        Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*#?&^_-]).{6,}$/),\r\n        Validators.minLength(6),\r\n        Validators.maxLength(20)\r\n      ]],\r\n      [this.repeatPassword]:[null,[\r\n        Validators.required,\r\n        Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*#?&^_-]).{6,}$/),\r\n        Validators.minLength(6),\r\n        Validators.maxLength(20)\r\n      ]]\r\n    },\r\n    {\r\n        validator: this.ConfirmedValidator(this.password, this.repeatPassword),\r\n    })\r\n  }\r\n\r\n  f(campo:string){\r\n    return this.formRegister.get(campo);\r\n  }\r\n\r\n  guardarUsuario(){\r\n    if(this.formRegister.valid){\r\n      this.user.apellidos = this.f(this.apellidos).value;\r\n      this.user.dni = this.f(this.dni).value;\r\n      this.user.habilitado = true;\r\n      this.user.fecha_creacion = new Date(Date.now());\r\n      this.user.fecha_modificacion = new Date(Date.now());\r\n      this.user.fecha_nacimiento = this.f(this.fechaNacimiento).value;\r\n      this.user.nombres = this.f(this.nombres).value;\r\n      this.user.rol = this.f('rol').value;\r\n      this.user.telefono = this.f(this.telefono).value;\r\n      this.user.id_sede = this.f('sede').value;\r\n      this.user.observaciones = this.f(this.observaciones).value;\r\n      this.user.email = this.f(this.email).value;\r\n      this.user.contrasenia = this.f(this.password).value;\r\n      Sweetalert(\"loading\", \"Cargando...\");\r\n      this.usuarioService.createUsers(this.user).subscribe( res=>{\r\n        Sweetalert(\"close\",null);\r\n        Sweetalert(\"success\", \"Usuario guardado\");\r\n        this.formRegister.reset();\r\n        this.f(this.fechaCreacion).setValue(new Date(Date.now()).toLocaleDateString())\r\n      }) \r\n    }\r\n  }\r\n\r\n  ConfirmedValidator(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n      if (\r\n        matchingControl.errors &&\r\n        !matchingControl.errors.confirmedValidator\r\n      ) {\r\n        return;\r\n      }\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ confirmedValidator: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n  getListSedes() {\r\n    this.usuarioService.getSedes().subscribe(res=>{\r\n      this.listSedes = res;\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Returns form Usuarios\r\n   */\r\n  get formU() {\r\n    return this.formRegister.controls;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <app-page-title title=\"Registrar Nuevo Usuario\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n  <form [formGroup]=\"formRegister\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-6\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h4 class=\"card-title\">\r\n              <div class=\"p-3 px-4\">\r\n                <div class=\"d-flex align-items-start\">\r\n                  <div class=\"align-self-center me-3\">\r\n                    <i class=\"uil uil-file-bookmark-alt text-primary h2\"></i>\r\n                  </div>\r\n                  <div class=\"flex-1\">\r\n                    <h5 class=\"font-size-16 mb-1\">Información del Usuario</h5>\r\n                    <p class=\"font-size-14 text-muted text-truncate mb-0\">\r\n                      Datos básicos del nuevo usuario.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </h4>\r\n            <p class=\"card-title-desc text-danger\">* Campo requerido</p> \r\n            <div class=\"border-top py-4\">\r\n              <div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-dni\">DNI *</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"billing-dni\" placeholder=\"Ingrese el DNI\"\r\n                        formControlName=\"{{this.dni}}\" [ngClass]=\"{'is-invalid': formU.campoDNI.invalid && (formU.campoDNI.dirty || formU.campoDNI.touched)}\"/>\r\n                      <div class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formU.campoDNI.errors?.required\">\r\n                          Campo requerido\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoDNI.errors?.pattern\">\r\n                          Ingrese solo números\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoDNI.errors?.min\">\r\n                          Número de dígitos menor\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoDNI.errors?.max\">\r\n                          Número de dígitos mayor\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-fecharegistro\">Fecha de Registro</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"billing-fecharegistro\"\r\n                        placeholder=\"Seleccione la fecha\" formControlName=\"{{this.fechaCreacion}}\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-firstnames\">Nombres *</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"billing-firstnames\" placeholder=\"Ingrese los nombres\"\r\n                        formControlName=\"{{this.nombres}}\" [ngClass]=\"{'is-invalid': formU.campoNombres.invalid && (formU.campoNombres.dirty || formU.campoNombres.touched)}\"/>\r\n                      <div class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formU.campoNombres.errors?.required\">\r\n                          Campo requerido\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoNombres.errors?.pattern\">\r\n                          Ingrese solo letras\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoNombres.errors?.minlength\">\r\n                          Los nombres debe ser mayor a 3 caracteres\r\n                        </div>\r\n                        <div  *ngIf=\"formU.campoNombres.errors?.maxlength\">\r\n                          Los nombres debe ser menor a 40 caracteres\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-lastnames\">Apellidos *</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"billing-lastnames\" placeholder=\"Ingrese los apellidos\"\r\n                        formControlName=\"{{this.apellidos}}\" [ngClass]=\"{'is-invalid': formU.campoApellidos.invalid && (formU.campoApellidos.dirty || formU.campoApellidos.touched)}\"/>\r\n                      <div class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formU.campoApellidos.errors?.required\">\r\n                          Campo requerido\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoApellidos.errors?.pattern\">\r\n                          Ingrese solo letras\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoApellidos.errors?.minlength\">\r\n                          Los apellidos debe ser mayor a 3 caracteres\r\n                        </div>\r\n                        <div  *ngIf=\"formU.campoApellidos.errors?.maxlength\">\r\n                          Los apellidos debe ser menor a 40 caracteres\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-fechanacimiento\">F. de Nacimiento</label>\r\n                      <input type=\"date\" class=\"form-control\" id=\"billing-fechanacimiento\"\r\n                        placeholder=\"Seleccione la fecha\" formControlName=\"{{this.fechaNacimiento}}\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-phone\">Teléfono</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"billing-phone\" placeholder=\"Teléfono del Cliente\"\r\n                        formControlName=\"{{this.telefono}}\" [ngClass]=\"{'is-invalid': formU.campoTelefono.invalid && (formU.campoTelefono.dirty || formU.campoTelefono.touched)}\"/>\r\n                      <div class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formU.campoTelefono.errors?.pattern\">\r\n                          Ingrese solo números\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoTelefono.errors?.min\">\r\n                          Número de dígitos menor\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoTelefono.errors?.max\">\r\n                          Número de dígitos mayor\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-email-address\">Correo Electrónico</label>\r\n                      <input type=\"email\" class=\"form-control\" id=\"billing-email-address\"\r\n                        placeholder=\"Correo electrónico\" formControlName=\"{{this.email}}\" [ngClass]=\"{'is-invalid': formU.campoEmail.invalid && (formU.campoEmail.dirty || formU.campoEmail.touched)}\"/>\r\n                      <div class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formU.campoEmail.errors?.email\">\r\n                          Email invalido\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-password\">Contraseña *</label>\r\n                      <input type=\"password\" class=\"form-control\" id=\"billing-password\"\r\n                        placeholder=\"Ingrese la contraseña\" formControlName=\"{{this.password}}\" [ngClass]=\"{'is-invalid': formU.campoPassword.invalid && (formU.campoPassword.dirty || formU.campoPassword.touched)}\"/>\r\n                      <div class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formU.campoPassword.errors?.required\">\r\n                          Campo requerido.\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoPassword.errors?.minlength\">\r\n                          Su contraseña debe ser mayor a 6 caracteres.\r\n                        </div>\r\n                        <div  *ngIf=\"formU.campoPassword.errors?.maxlength\">\r\n                          Su contraseña debe ser menor a 20 caracteres.\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoPassword.errors?.pattern\">\r\n                          La contraseña debe tener entre 6 a 20 caracteres, al menos una mayúscula, minúscula, dígito y un carácter especial.  \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-repet-password\">Repita la contraseña *</label>\r\n                      <input type=\"password\" class=\"form-control\" id=\"billing-repet-password\"\r\n                        placeholder=\"Repita la contraseña\" formControlName=\"{{this.repeatPassword}}\" [ngClass]=\"{'is-invalid': formU.campoRepeatPassword.invalid && (formU.campoRepeatPassword.dirty || formU.campoRepeatPassword.touched)}\"/>\r\n                      <div class=\"invalid-feedback\">\r\n                        <div *ngIf=\"formU.campoRepeatPassword.errors?.required\">\r\n                          Campo requerido.\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoRepeatPassword.errors?.minlength\">\r\n                          Su contraseña debe ser mayor a 6 caracteres.\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoRepeatPassword.errors?.maxlength\">\r\n                          Su contraseña debe ser menor a 20 caracteres.\r\n                        </div>\r\n                        <div *ngIf=\"formU.campoRepeatPassword.errors?.pattern\">\r\n                          La contraseña debe tener entre 6 a 20 caracteres, al menos una mayúscula, minúscula, dígito y un carácter especial.  \r\n                        </div> \r\n                        <div *ngIf=\"formU.campoRepeatPassword.errors?.confirmedValidator\">\r\n                          Las contraseñas no coinciden.\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-12 col-sm-12\">\r\n                    <div class=\"mb-4\">\r\n                      <label class=\"form-label\" for=\"billing-observaciones\">Observaciones</label>\r\n                      <textarea class=\"form-control\" id=\"billing-observaciones\" rows=\"4\"\r\n                        placeholder=\"Ingrese las observaciones\" formControlName=\"{{this.observaciones}}\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- end card -->\r\n      </div> <!-- end col -->\r\n\r\n      <div class=\"col-xl-6\">\r\n        <div class=\"row\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">\r\n                <div class=\"p-3 px-4\">\r\n                  <div class=\"d-flex align-items-start\">\r\n                    <div class=\"align-self-center me-3\">\r\n                      <i class=\"uil uil-award-alt text-primary h2\"></i>\r\n                    </div>\r\n                    <div class=\"flex-1\">\r\n                      <h5 class=\"font-size-16 mb-1\">Rol del Usuario</h5>\r\n                      <p class=\"font-size-14 text-muted text-truncate mb-0\">\r\n                        Rol que desempeñará el nuevo usuario.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </h4>\r\n              <p class=\"card-title-desc text-danger\">* Campo requerido</p> \r\n              <div class=\"border-top py-2\">\r\n                <div>\r\n                  <h5 class=\"font-size-14 mb-3\">Roles *</h5>\r\n                  <div class=\"scrolling-wrapper row flex-row flex-nowrap mt-2 pb-4 pt-2\">\r\n                    <div class=\"col-sm-3\" *ngFor='let rol of listRoles;let i = index'>\r\n                      <div data-toggle=\"collapse\">\r\n                        <label class=\"card-radio-label\">\r\n                          <input type=\"radio\" id=\"{{rol.cNombre}}\" name=\"rol\" class=\"card-radio-input\"\r\n                            formControlName=\"rol\" value=\"{{rol.tNombre}}\" />\r\n                          <span class=\"card-radio text-center text-truncate\">\r\n                            <i class=\"uil uil-user d-block h2 mb-3\"></i>\r\n                            {{rol.tNombre}}\r\n                          </span>\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">\r\n                <div class=\"p-3 px-4\">\r\n                  <div class=\"d-flex align-items-start\">\r\n                    <div class=\"align-self-center me-3\">\r\n                      <i class=\"uil uil-location-pin-alt text-primary h2\"></i>\r\n                    </div>\r\n                    <div class=\"flex-1\">\r\n                      <h5 class=\"font-size-16 mb-1\">Sede del Usuario</h5>\r\n                      <p class=\"font-size-14 text-muted text-truncate mb-0\">\r\n                        Sede donde laborará el nuevo usuario.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </h4>\r\n              <p class=\"card-title-desc text-danger\">* Campo requerido</p> \r\n              <div class=\"border-top py-2\">\r\n                <div>\r\n                  <h5 class=\"font-size-14 mb-3\">Sedes *</h5>\r\n                    <div class=\"scrolling-wrapper row flex-row flex-nowrap mt-2 pb-4 pt-2\">\r\n                      <div class=\"col-sm-4\" *ngFor='let sede of listSedes;let i = index'>\r\n                        <div data-toggle=\"collapse\">\r\n                          <label class=\"card-radio-label\">\r\n                            <input type=\"radio\" id=\"{{sede.id_sede}}\" name=\"sede\" class=\"card-radio-input\"\r\n                              formControlName=\"sede\" value=\"{{sede.id_sede}}\" />\r\n                            <span class=\"card-radio text-center text-truncate\">\r\n                              <i class=\"uil uil-store-alt d-block h2 mb-3\"></i>\r\n                              {{sede.nombre_sede}}<br>\r\n                              {{sede.direccion}}\r\n                            </span>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"row my-4\">\r\n    <div class=\"col\">\r\n      <div class=\"text-sm-end mt-sm-0\">\r\n        <button class=\"btn btn-success\" (click)=\"guardarUsuario()\" [disabled]=\"!formRegister.valid\">\r\n          <i class=\"uil uil-user-plus me-1\"></i> Registrar Usuario\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit, QueryList, ViewChildren  } from '@angular/core';\r\n\r\nimport {DecimalPipe, formatDate} from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {CustomerService} from './list-users.service';\r\nimport {NgbdSortableHeader, SortEvent} from './sortable.directive';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { UsersModel } from 'src/models/user';\r\nimport { SedesModel } from 'src/models/sedes';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\n\r\nimport { Sweetalert } from 'src/utils/sweetalert';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-list-users',\r\n  templateUrl: './list-users.component.html',\r\n  styleUrls: ['./list-users.component.scss'],\r\n  providers: [CustomerService, DecimalPipe]\r\n})\r\nexport class ListUsersComponent implements OnInit {\r\n\r\n    mostrarSpinner = false;\r\n\r\n    // modal\r\n    editEvent: any;\r\n    formUser: FormGroup;\r\n    submitted = false;\r\n\r\n    nombres: string = \"campoNombres\";\r\n    apellidos: string = \"campoApellidos\";\r\n    dni: string = \"campoDNI\";\r\n    rol: string = \"campoRol\";\r\n    sede: string = \"campoSede\";\r\n    telefono: string = \"campoTelefono\";\r\n    fechaNacimiento: string = \"campoFechaNacimiento\";\r\n    fechaModificacion: string = \"campoFechaModificacion\";\r\n    email: string = \"campoEmail\";\r\n    observaciones: string = \"campoObservaciones\";\r\n    // bread crumb items\r\n    breadCrumbItems: Array<{}>;\r\n    term: any;\r\n  \r\n    customers$: Observable<UsersModel[]>;\r\n    total$: Observable<number>;\r\n\r\n    lettersPattern = '[a-zA-ZñÑáéíóúÁÉÍÓÚ ]*'; // Incluimos Ññ y tildes en cada vocal\r\n    numberPattern = '^[0-9]+$|^\\S*$';\r\n    passwordPattern = '/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*#?&^_-]).{8,}/';\r\n  \r\n    @ViewChildren(NgbdSortableHeader) headers: QueryList<NgbdSortableHeader>;\r\n    listRoles = [\r\n      { cNombre:1, tNombre: \"Admin\" },\r\n      { cNombre:2, tNombre: \"Vendedor\" },\r\n      { cNombre:3, tNombre: \"Contador\" }\r\n    ];\r\n    user= new UsersModel;\r\n    fecha_actual: Date;\r\n    listSedes: Array<SedesModel>;\r\n  fecha_nac: Date;\r\n  \r\n  constructor(\r\n    public service: CustomerService,\r\n    private usuarioService: UsuarioService,\r\n    private modalService: NgbModal, \r\n    private fb: FormBuilder,\r\n    ) {\r\n    this.customers$ = service.customers$;\r\n    this.total$ = service.total$;\r\n    service.mostrar.subscribe(res=>{\r\n      this.mostrarSpinner = res;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.crearFormulario();\r\n    this.getSedes();\r\n    this.breadCrumbItems = [{ label: 'Usuarios' }, { label: 'Lista de Usuarios', active: true }];\r\n  }\r\n\r\n  onSort({column, direction}: SortEvent) {\r\n    // resetting other headers\r\n    this.headers.forEach(header => {\r\n      if (header.sortable !== column) {\r\n        header.direction = '';\r\n      }\r\n    });\r\n\r\n    this.service.sortColumn = column;\r\n    this.service.sortDirection = direction;\r\n  }\r\n\r\n  f(campo:any) {\r\n    return this.formUser.get(campo);\r\n  }\r\n  /**\r\n   * Open center modal\r\n   * @param centerDataModal center modal data\r\n   */\r\n   centerModal(centerDataModal: any, data: UsersModel) {\r\n    this.fecha_nac = data.fecha_nacimiento;\r\n    this.fecha_actual = new Date(Date.now());\r\n    this.f(this.dni).setValue(data.dni);\r\n    this.f(this.fechaModificacion).setValue(formatDate(this.fecha_actual,'yyyy-MM-dd','en'));\r\n    this.f(this.nombres).setValue(data.nombres);\r\n    this.f(this.apellidos).setValue(data.apellidos);\r\n    this.f(this.fechaNacimiento).setValue(formatDate(data.fecha_nacimiento,'yyyy-MM-dd','en','GMT-0500'));\r\n    this.f(this.telefono).setValue(data.telefono);\r\n    this.f(this.email).setValue(data.email);\r\n    this.f('rol').setValue(data.rol);\r\n    this.f('sede').setValue(data.id_sede);\r\n    this.f(this.observaciones).setValue(data.observaciones);\r\n    this.user.id_usuario = data.id_usuario;\r\n    this.modalService.open(centerDataModal, { centered: true, size: 'lg', windowClass:'modal-holder' });\r\n  }\r\n  \r\n    /**\r\n * Delete event\r\n */\r\ndeleteEventData() {\r\n  this.editEvent.remove();\r\n  this.modalService.dismissAll();\r\n}\r\n\r\n/**\r\n * Close event modal\r\n */\r\ncloseEventModal() {\r\n  this.modalService.dismissAll();\r\n}\r\n\r\n  /**\r\n   * Save the event\r\n   */\r\n  saveEvent() {\r\n    /* if (this.formData.valid) {\r\n\r\n    }\r\n    this.submitted = true;*/\r\n  } \r\n\r\n  crearFormulario(){\r\n    this.formUser = this.fb.group({\r\n      [this.nombres]:[null,[\r\n        Validators.required,\r\n        Validators.pattern(this.lettersPattern),\r\n        Validators.minLength(3),\r\n        Validators.maxLength(40)\r\n      ]],\r\n      [this.apellidos]:[null,[\r\n        Validators.required,\r\n        Validators.pattern(this.lettersPattern),\r\n        Validators.minLength(3),\r\n        Validators.maxLength(40)\r\n      ]],\r\n\r\n      [this.dni]:[{value: null, disabled: true}],\r\n\r\n      rol:[],\r\n      [this.email]:[null,[\r\n        Validators.email\r\n      ]],\r\n      [this.observaciones]:[null,[\r\n      ]],\r\n      [this.telefono]:[null,[\r\n        Validators.pattern(this.numberPattern),\r\n        Validators.min(111111111),\r\n        Validators.max(999999999)\r\n      ]],\r\n      [this.fechaNacimiento]:[null,[\r\n        //Validators.required\r\n      ]],\r\n      [this.fechaModificacion]:[{value:null,disabled:true},[\r\n        //Validators.required\r\n      ]],\r\n      sede:[],\r\n    },)\r\n  }\r\n\r\n  ConfirmedValidator(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n      if (\r\n        matchingControl.errors &&\r\n        !matchingControl.errors.confirmedValidator\r\n      ) {\r\n        return;\r\n      }\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ confirmedValidator: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n  getSedes() {\r\n    this.usuarioService.getSedes().subscribe(res =>{\r\n      this.listSedes = res;\r\n    })\r\n  }\r\n\r\n  eliminar(data: UsersModel) {\r\n    Swal.fire({\r\n      title: '¿Está seguro que desea eliminar al Usuario?',\r\n      text: 'No se podrá revertir esto!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#34c38f',\r\n      cancelButtonColor: '#f46a6a',\r\n      confirmButtonText: 'Si, eliminar!'\r\n    }).then(result => {\r\n      if (result.value) {\r\n        Sweetalert(\"loading\", \"Cargando...\");\r\n        this.usuarioService.darBajaUser(data.id_usuario).subscribe(res => {\r\n          Sweetalert(\"close\", null);\r\n          Sweetalert(\"success\", \"Usuario eliminado\");\r\n          this.updateListUsers();\r\n        }, error => {\r\n          Sweetalert(\"close\", null);\r\n          Sweetalert(\"error\", \"Error en la conexión\");\r\n        },\r\n        );\r\n      }\r\n      else if (\r\n        /* Read more about handling dismissals below */\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        Swal.fire(\r\n          'Cancelado',\r\n          'Usuario no eliminado',\r\n          'error'\r\n        );\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n  updateUser() {\r\n    if (this.formUser.valid) {\r\n      this.user.fecha_modificacion = new Date(Date.now());\r\n      this.user.nombres = this.f(this.nombres).value;\r\n      this.user.apellidos = this.f(this.apellidos).value;\r\n      const fch_nac = new Date((this.f(this.fechaNacimiento).value+'T00:00'));\r\n      this.user.fecha_nacimiento = fch_nac;\r\n      this.user.telefono = this.f(this.telefono).value;\r\n      this.user.email = this.f(this.email).value;\r\n      this.user.rol = this.f('rol').value;\r\n      this.user.id_sede = this.f('sede').value;\r\n      this.user.observaciones = this.f(this.observaciones).value;\r\n      Sweetalert(\"loading\", \"Cargando...\");\r\n      this.usuarioService.updateUsers(this.user.id_usuario,this.user).subscribe(res=>{\r\n        this.modalService.dismissAll();\r\n        this.formUser.reset();\r\n        this.updateListUsers();\r\n        Sweetalert(\"close\",null);\r\n        Sweetalert(\"success\",\"Datos del usuario actualizados\");\r\n      }); \r\n    } else {\r\n      \r\n    }\r\n  }\r\n\r\n  updateListUsers() {\r\n    this.usuarioService.getUsers().subscribe( res=>{\r\n      this.service.updateTable(res);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Returns form Editar Usuarios\r\n   */\r\n    get formEU() {\r\n      return this.formUser.controls;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <app-page-title title=\"Lista de Usuarios\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\r\n\r\n  <div class=\"row mt-2 mb-2\">\r\n    <div class=\"col-sm-12 col-md-8 justify-content-start\">\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-md-8 search-box chat-search-box\">\r\n          <div class=\"position-relative\">\r\n            <input type=\"text\" class=\"form-control border-light rounded\" placeholder=\"Buscar cliente\" name=\"searchTerm\"\r\n              aria-controls=\"tickets-table\" [(ngModel)]=\"service.searchTerm\">\r\n            <i class=\"uil uil-search search-icon\"></i>\r\n          </div>\r\n        </div>\r\n<!--         <div class=\"col-4\">\r\n          <div class=\"btn-group text-md-start\">\r\n            <button type=\"button\" class=\"btn btn-primary\"><i class=\"uil uil-import\" ngbTooltip=\"Exportar\"></i></button>\r\n            <button type=\"button\" class=\"btn btn-primary\"><i class=\"uil uil-export\" ngbTooltip=\"Importar\"></i></button>\r\n          </div>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-12 col-md-4 text-md-end\">\r\n      <div class=\"dataTables_length\"><label class=\"d-inline-flex align-items-center\">Mostrar<select name=\"pageSize\"\r\n            [(ngModel)]=\"service.pageSize\"\r\n            class=\"custom-select custom-select-sm form-control form-control-sm form-select form-select-sm\">\r\n            <option [ngValue]=\"10\">10</option>\r\n            <option [ngValue]=\"25\">25</option>\r\n            <option [ngValue]=\"50\">50</option>\r\n            <option [ngValue]=\"100\">100</option>\r\n          </select> entradas</label></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"table-responsive mb-4\">\r\n          <form>\r\n            <table class=\"table datatables table-centered table-nowrap mb-0 align-middle table-card-list\"style=\"border-spacing: 0 12px; width: 100%;\">\r\n              <thead>\r\n                <tr class=\"bg-transparent\">\r\n                  <!--                     <th style=\"width: 20px;\">\r\n                      <div class=\"form-check text-center\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"customercheck\">\r\n                        <label class=\"form-check-label\" for=\"customercheck\"></label>\r\n                      </div>\r\n                    </th> -->\r\n                  <th scope=\"col\" sortable=\"id\" (sort)=\"onSort($event)\">Ord.</th>\r\n                  <th scope=\"col\" sortable=\"nombres\" (sort)=\"onSort($event)\">Nombres</th>\r\n                  <th scope=\"col\" sortable=\"apellidos\" (sort)=\"onSort($event)\">Apellidos</th>\r\n                  <th scope=\"col\" sortable=\"dni\" (sort)=\"onSort($event)\">DNI</th>\r\n                  <th scope=\"col\" sortable=\"rol\" (sort)=\"onSort($event)\">Rol</th>\r\n                  <th scope=\"col\" sortable=\"sede\" (sort)=\"onSort($event)\">Sede</th>\r\n                  <th scope=\"col\" sortable=\"email\" (sort)=\"onSort($event)\">Email</th>\r\n                  <th scope=\"col\" sortable=\"fecha_creacion\" (sort)=\"onSort($event)\">Fecha de Ingreso</th>\r\n<!--                   <th scope=\"col\" sortable=\"status\" (sort)=\"onSort($event)\">Estado</th> -->\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let data of customers$ | async; let i = index\">\r\n                  <!--                     <td>\r\n                      <div class=\"form-check text-center\">\r\n                        <input id=\"ordercheck{{data.index}}\" type=\"checkbox\" class=\"form-check-input\" />\r\n                        <label class=\"form-check-label\" for=\"ordercheck{{data.index}}\">&nbsp;</label>\r\n                      </div>\r\n                    </td> -->\r\n                  <td>\r\n                    <ngb-highlight [result]=\"i+1\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <div class=\"avatar-xs d-inline-block me-2\">\r\n                      <span class=\"avatar-title rounded-circle bg-light text-body\">\r\n                        {{data.nombres.charAt(0)}}\r\n                      </span>\r\n                    </div>\r\n                    <ngb-highlight [result]=\"data.nombres\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight [result]=\"data.apellidos\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight [result]=\"data.dni\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight [result]=\"data.rol\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight [result]=\"data.sede\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight [result]=\"data.email\" [term]=\"service.searchTerm\"></ngb-highlight>\r\n                  </td>\r\n                  <td>\r\n                    <ngb-highlight [result]=\"data.fecha_creacion| date: 'dd/MM/yyyy'\"\r\n                      [term]=\"service.searchTerm\"></ngb-highlight>\r\n                  </td>\r\n<!--                   <td>\r\n                    <span class=\"badge bg-pill bg-soft-success font-size-12\"\r\n                      [ngClass]=\" { 'bg-soft-danger': data.status === 'Deactive' }\">{{data.status}}</span>\r\n                  </td> -->\r\n                  <td>\r\n                    <a (click)=\"centerModal(centerDataModal,data)\" class=\"px-2 text-primary\" placement=\"top\"\r\n                      ngbTooltip=\"Editar\"><i class=\"uil uil-pen font-size-18\"></i></a>\r\n                    <a (click)=\"eliminar(data)\" class=\"px-2 text-danger\" placement=\"top\" ngbTooltip=\"Eliminar\"><i\r\n                        class=\"uil uil-trash-alt font-size-18\"></i></a>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n      </div>\r\n      \r\n      <div class=\"row\" *ngIf=\"!mostrarSpinner\">\r\n        <div class=\"col-12\">\r\n          <div class=\"text-center my-3\">\r\n            <a href=\"javascript:void(0);\" class=\"text-primary\"><i\r\n                class=\"mdi mdi-loading mdi-spin font-size-20 align-middle me-2\"></i> Cargando </a>\r\n          </div>\r\n        </div> <!-- end col-->\r\n      </div>\r\n\r\n      <!-- End table -->\r\n      <div class=\"row justify-content-md-between align-items-md-center\">\r\n        <!-- <div class=\"col-sm-12 col-md-5\">\r\n          <div class=\"dataTables_info mb-2\" id=\"tickets-table_info\" role=\"status\" aria-live=\"polite\">Page 2 of 84</div>\r\n        </div> -->\r\n        <!-- Pagination -->\r\n        <div class=\"col-12\">\r\n          <div class=\"text-md-end float-md-end pagination-rounded\">\r\n            <ngb-pagination [collectionSize]=\"total$ | async\" [(page)]=\"service.page\" [pageSize]=\"service.pageSize\" [maxSize]=\"5\" [rotate]=\"true\" [boundaryLinks]=\"true\">\r\n            </ngb-pagination>\r\n          </div>\r\n        </div>\r\n        <!-- End Pagination -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- end row -->\r\n</div>\r\n\r\n\r\n<!-- Editar User - Center Modal -->\r\n<ng-template #centerDataModal let-modal>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title\" id=\"modal-title\">Editar Usuario</h5>\r\n    <button type=\"button\" class=\"btn-close\" (click)=\"closeEventModal()\">\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body p-4\">\r\n    <form (ngSubmit)=\"saveEvent()\" [formGroup]=\"formUser\">\r\n      <p class=\"card-title-desc text-danger\">* Campo requerido</p> \r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"control-label\">DNI *</label>\r\n            <input class=\"form-control\" placeholder=\"DNI del cliente\" type=\"text\" name=\"title\"\r\n              formControlName=\"{{this.dni}}\"/>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"control-label\">Fecha de Registro</label>\r\n            <input class=\"form-control\" placeholder=\"Seleccione la fecha\" type=\"date\" name=\"title\"\r\n              formControlName=\"{{this.fechaModificacion}}\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-6\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"control-label\">Nombres *</label>\r\n            <input class=\"form-control\" placeholder=\"Nombres del cliente\" type=\"text\" name=\"title\"\r\n              formControlName=\"{{this.nombres}}\" [ngClass]=\"{'is-invalid': formEU.campoNombres.invalid && (formEU.campoNombres.dirty || formEU.campoNombres.touched)}\"/>\r\n            <div class=\"invalid-feedback\">\r\n              <div *ngIf=\"formEU.campoNombres.errors?.required\">\r\n                Campo requerido\r\n              </div>\r\n              <div *ngIf=\"formEU.campoNombres.errors?.pattern\">\r\n                Ingrese solo letras\r\n              </div>\r\n              <div *ngIf=\"formEU.campoNombres.errors?.minlength\">\r\n                Los nombres debe ser mayor a 3 caracteres\r\n              </div>\r\n              <div  *ngIf=\"formEU.campoNombres.errors?.maxlength\">\r\n                Los nombres debe ser menor a 40 caracteres\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"control-label\">Apellidos *</label>\r\n            <input class=\"form-control\" placeholder=\"Apellidos del cliente\" type=\"text\" name=\"title\"\r\n              formControlName=\"{{this.apellidos}}\" [ngClass]=\"{'is-invalid': formEU.campoApellidos.invalid && (formEU.campoApellidos.dirty || formEU.campoApellidos.touched)}\"/>\r\n            <div class=\"invalid-feedback\">\r\n              <div *ngIf=\"formEU.campoApellidos.errors?.required\">\r\n                Campo requerido\r\n              </div>\r\n              <div *ngIf=\"formEU.campoApellidos.errors?.pattern\">\r\n                Ingrese solo letras\r\n              </div>\r\n              <div *ngIf=\"formEU.campoApellidos.errors?.minlength\">\r\n                Los apellidos debe ser mayor a 3 caracteres\r\n              </div>\r\n              <div  *ngIf=\"formEU.campoApellidos.errors?.maxlength\">\r\n                Los apellidos debe ser menor a 40 caracteres\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"control-label\">Fecha de Nacimiento</label>\r\n            <input class=\"form-control\" placeholder=\"Seleccione la fecha\" type=\"date\" name=\"title\"\r\n              formControlName=\"{{this.fechaNacimiento}}\"  />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-3\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"control-label\">Telefono</label>\r\n            <input class=\"form-control\" placeholder=\"Telefono del cliente\" type=\"text\" name=\"title\"\r\n              formControlName=\"{{this.telefono}}\" [ngClass]=\"{'is-invalid': formEU.campoTelefono.invalid && (formEU.campoTelefono.dirty || formEU.campoTelefono.touched)}\"/>\r\n            <div class=\"invalid-feedback\">\r\n              <div *ngIf=\"formEU.campoTelefono.errors?.pattern\">\r\n                Ingrese solo números\r\n              </div>\r\n              <div *ngIf=\"formEU.campoTelefono.errors?.min\">\r\n                Número de dígitos menor\r\n              </div>\r\n              <div *ngIf=\"formEU.campoTelefono.errors?.max\">\r\n                Número de dígitos mayor\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <div class=\"mb-3\">\r\n            <label class=\"control-label\">Correo Electrónico</label>\r\n            <input class=\"form-control\" placeholder=\"Correo electrónico\" type=\"email\" \r\n              formControlName=\"{{this.email}}\" [ngClass]=\"{'is-invalid': formEU.campoEmail.invalid && (formEU.campoEmail.dirty || formEU.campoEmail.touched)}\"/>\r\n            <div class=\"invalid-feedback\">\r\n              <div *ngIf=\"formEU.campoEmail.errors?.email\">\r\n                Email invalido\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"border-top py-2\">\r\n        <div class=\"d-flex justify-content-center\">\r\n          <h6>Rol y Sede del Usuario</h6>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"control-label\">Rol *</label>\r\n              <ng-select [items]=\"listRoles\" formControlName=\"rol\" placeholder=\"Seleccione\" bindValue=\"tNombre\"\r\n                bindLabel=\"tNombre\">\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"control-label\">Sede *</label>\r\n              <ng-select [items]=\"listSedes\" formControlName=\"sede\" placeholder=\"Seleccione\" bindValue=\"id_sede\"\r\n                bindLabel=\"nombre_sede\">\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"border-top py-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12\">\r\n            <div class=\"mb-4\">\r\n              <label class=\"form-label\" for=\"billing-observaciones\">Observaciones</label>\r\n              <textarea class=\"form-control\" id=\"billing-observaciones\" rows=\"3\" placeholder=\"Ingrese las observaciones\"\r\n                formControlName=\"{{this.observaciones}}\"></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"text-end mt-2\">\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"closeEventModal()\">\r\n          Cerrar\r\n        </button>\r\n        <button type=\"submit\" class=\"btn btn-success ms-1\" id=\"btn-save-event\" (click)=\"updateUser()\">\r\n          Guardar\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <!-- end modal dialog-->\r\n</ng-template>\r\n<!-- end modal-->","import { Injectable, PipeTransform } from '@angular/core';\r\n\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\n\r\n\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { debounceTime, delay, switchMap, tap } from 'rxjs/operators';\r\nimport { SortColumn, SortDirection } from './sortable.directive';\r\nimport { UsersModel } from 'src/models/user';\r\nimport { UsuarioService } from 'src/app/services/usuario.service';\r\n\r\ninterface SearchResult {\r\n  customers: UsersModel[];\r\n  total: number;\r\n}\r\n\r\ninterface State {\r\n  page: number;\r\n  pageSize: number;\r\n  searchTerm: string;\r\n  sortColumn: SortColumn;\r\n  sortDirection: SortDirection;\r\n}\r\n\r\nconst compare = (v1: string | number | boolean | Date, v2: string | number | boolean | Date) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\r\n\r\nfunction sort(customers: UsersModel[], column: SortColumn, direction: string): UsersModel[] {\r\n  if (direction === '' || column === '') {\r\n    return customers;\r\n  } else {\r\n    return [...customers].sort((a, b) => {\r\n      const res = compare(a[column], b[column]);\r\n      return direction === 'asc' ? res : -res;\r\n    });\r\n  }\r\n}\r\n\r\nfunction matches(customer: UsersModel, term: string, pipe: PipeTransform) {\r\n  return customer.nombres.toLowerCase().includes(term.toLowerCase())\r\n  || customer.apellidos.toLowerCase().includes(term.toLowerCase())\r\n  || String(customer.dni).toLowerCase().includes(term.toLowerCase())\r\n  || customer.rol.toLowerCase().includes(term.toLowerCase())\r\n  // || customer.sede.toLowerCase().includes(term.toLowerCase())\r\n  || customer.telefono.toLowerCase().includes(term)\r\n  || customer.email.toLowerCase().includes(term)\r\n  || customer.fecha_creacion.toLocaleString().includes(term);\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CustomerService {\r\n  private _loading$ = new BehaviorSubject<boolean>(true);\r\n  private _search$ = new Subject<void>();\r\n  private _customers$ = new BehaviorSubject<UsersModel[]>([]);\r\n  private _total$ = new BehaviorSubject<number>(0);\r\n  private _mostrar$ = new BehaviorSubject<boolean>(false);\r\n  usersList: UsersModel[] = [];\r\n  private _state: State = {\r\n    page: 1,\r\n    pageSize: 10,\r\n    searchTerm: '',\r\n    sortColumn: '',\r\n    sortDirection: ''\r\n  };\r\n\r\n  constructor(\r\n    private pipe: DecimalPipe,\r\n    private userService: UsuarioService\r\n    ) {\r\n    this.getListUsers();\r\n  }\r\n\r\n  updateTable (data) {\r\n    this._customers$.next(data);\r\n  }\r\n\r\n  get customers$() { return this._customers$.asObservable(); }\r\n  get total$() { return this._total$.asObservable(); }\r\n  get loading$() { return this._loading$.asObservable(); }\r\n  get page() { return this._state.page; }\r\n  get pageSize() { return this._state.pageSize; }\r\n  get searchTerm() { return this._state.searchTerm; }\r\n  get mostrar() { return this._mostrar$.asObservable();}\r\n\r\n  set page(page: number) { this._set({ page }); }\r\n  set pageSize(pageSize: number) { this._set({ pageSize }); }\r\n  set searchTerm(searchTerm: string) { this._set({ searchTerm }); }\r\n  set sortColumn(sortColumn: SortColumn) { this._set({ sortColumn }); }\r\n  set sortDirection(sortDirection: SortDirection) { this._set({ sortDirection }); }\r\n\r\n  private _set(patch: Partial<State>) {\r\n    Object.assign(this._state, patch);\r\n    this._search$.next();\r\n  }\r\n\r\n  private _search(): Observable<SearchResult> {\r\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\r\n\r\n    // 1. sort\r\n    let customers = sort(this.usersList, sortColumn, sortDirection);\r\n\r\n    // 2. filter\r\n    customers = customers.filter(customer => matches(customer, searchTerm, this.pipe));\r\n    const total = customers.length;\r\n\r\n    // 3. paginate\r\n    customers = customers.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n    return of({ customers, total });\r\n  }\r\n\r\n  getListUsers() {\r\n    this.userService.getUsers().subscribe(res =>{\r\n      this.usersList = res;\r\n      this._mostrar$.next(true);\r\n      this._search$.pipe(\r\n        tap(() => this._loading$.next(true)),\r\n        debounceTime(200),\r\n        switchMap(() => this._search()),\r\n        delay(200),\r\n        tap(() => this._loading$.next(false))\r\n      ).subscribe(result => {\r\n        this._customers$.next(result.customers);\r\n        this._total$.next(result.total);\r\n      });\r\n  \r\n      this._search$.next();\r\n    })\r\n  }\r\n}","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\nimport { UsersModel } from 'src/models/user';\r\n\r\nexport type SortColumn = keyof UsersModel | '';\r\nexport type SortDirection = 'asc' | 'desc' | '';\r\nconst rotate: { [key: string]: SortDirection } = { 'asc': 'desc', 'desc': '', '': 'asc' };\r\n\r\nexport interface SortEvent {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n\r\n@Directive({\r\n  selector: 'th[sortable]',\r\n  host: {\r\n    '[class.asc]': 'direction === \"asc\"',\r\n    '[class.desc]': 'direction === \"desc\"',\r\n    '(click)': 'rotate()'\r\n  }\r\n})\r\nexport class NgbdSortableHeader {\r\n\r\n  @Input() sortable: SortColumn = '';\r\n  @Input() direction: SortDirection = '';\r\n  @Output() sort = new EventEmitter<SortEvent>();\r\n\r\n  rotate() {\r\n    this.direction = rotate[this.direction];\r\n    this.sort.emit({ column: this.sortable, direction: this.direction });\r\n  }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AdduserComponent } from \"./adduser/adduser.component\";\r\nimport { ListUsersComponent } from \"./list-users/list-users.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'adduser',\r\n        component: AdduserComponent\r\n    }, \r\n    {\r\n        path: 'listusers',\r\n        component: ListUsersComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule {}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbDropdownModule, NgbPaginationModule, NgbTooltipModule, NgbAccordionModule, NgbTypeaheadModule, NgbCollapseModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgSelectModule } from \"@ng-select/ng-select\";\r\nimport { Ng2SearchPipeModule } from \"ng2-search-filter\";\r\nimport { Ng5SliderModule } from \"ng5-slider\";\r\nimport { DropzoneModule, DROPZONE_CONFIG } from \"ngx-dropzone-wrapper\";\r\nimport { config } from \"rxjs\";\r\nimport { UIModule } from \"src/app/shared/ui/ui.module\";\r\nimport { AdduserComponent } from \"./adduser/adduser.component\";\r\nimport { ListUsersComponent } from \"./list-users/list-users.component\";\r\nimport { NgbdSortableHeader } from \"./list-users/sortable.directive\";\r\nimport { UserRoutingModule } from \"./user-routing.module\";\r\n\r\n@NgModule({\r\n    // tslint:disable-next-line: max-line-length\r\n    declarations: [ListUsersComponent, AdduserComponent, NgbdSortableHeader],\r\n    imports: [\r\n      UserRoutingModule,\r\n      CommonModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      Ng2SearchPipeModule,\r\n      NgbDropdownModule,\r\n      DropzoneModule,\r\n      UIModule,\r\n      Ng5SliderModule,\r\n      NgSelectModule,\r\n      NgbPaginationModule,\r\n      NgbTooltipModule,\r\n      NgbAccordionModule,\r\n      NgbTypeaheadModule,\r\n      NgbCollapseModule\r\n    ],\r\n    providers: [\r\n      {\r\n        provide: DROPZONE_CONFIG,\r\n        useValue: config\r\n      }\r\n    ]\r\n  })\r\n  export class UserModule { }\r\n  ","export class UsersModel {\r\n    id_usuario?:string;\r\n    nombres: string;\r\n    apellidos: string;\r\n    dni: string;\r\n    telefono:string;\r\n    fecha_nacimiento: Date;\r\n    fecha_creacion: Date;\r\n    fecha_modificacion: Date;\r\n    rol: string;\r\n    habilitado: boolean;\r\n    id_sede: string;\r\n    contrasenia: string;\r\n    email: string;\r\n    observaciones:string\r\n    prueba: string;\r\n    usuario?: string\r\n}"],"names":[],"sourceRoot":"webpack:///"}