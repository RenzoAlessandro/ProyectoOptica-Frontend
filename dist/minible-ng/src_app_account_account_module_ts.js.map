{"version":3,"file":"src_app_account_account_module_ts.js","mappings":"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","sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html","./src/app/account/auth/signup/signup.component.ts","./src/app/account/auth/signup/signup.component.html","./src/app/core/services/user.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AccountRoutingModule,\r\n    AuthModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: 'signup',\r\n        component: SignupComponent\r\n    },\r\n    {\r\n        path: 'reset-password',\r\n        component: PasswordresetComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UIModule } from '../../shared/ui/ui.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AuthRoutingModule } from './auth-routing';\r\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignupComponent, PasswordresetComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    NgbAlertModule,\r\n    UIModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\n/**\r\n * Login component\r\n */\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  returnUrl: string;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\r\n    private authFackservice: AuthfakeauthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    document.body.setAttribute('class', 'authentication-bg');\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['admin@themesbrand.com', [Validators.required, Validators.email]],\r\n      password: ['123456', [Validators.required]],\r\n    });\r\n\r\n    // reset login status\r\n    // this.authenticationService.logout();\r\n    // get return url from route parameters or default to '/'\r\n    // tslint:disable-next-line: no-string-literal\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  /**\r\n   * Form submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      if (environment.defaultauth === 'firebase') {\r\n        this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\r\n          document.body.removeAttribute('class');\r\n          this.router.navigate(['/dashboard']);\r\n        })\r\n          .catch(error => {\r\n            this.error = error ? error : '';\r\n          });\r\n      } else {\r\n        this.authFackservice.login(this.f.email.value, this.f.password.value)\r\n          .pipe(first())\r\n          .subscribe(\r\n            data => {\r\n              this.router.navigate(['/dashboard']);\r\n            },\r\n            error => {\r\n              this.error = error ? error : '';\r\n            });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"home-btn d-none d-sm-block\">\r\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\r\n</div>\r\n<div class=\"account-pages mt-5 mb-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n          <div class=\"text-center\">\r\n              <a href=\"/\" class=\"mb-5 d-block auth-logo\">\r\n                  <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\r\n                  <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\r\n              </a>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row align-items-center justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div class=\"card overflow-hidden\">\r\n\r\n          <div class=\"card-body p-4\"> \r\n            <div class=\"text-center mt-2\">\r\n                <h5 class=\"text-primary\">Welcome Back !</h5>\r\n                <p class=\"text-muted\">Sign in to continue to Minible.</p>\r\n            </div>\r\n            <div class=\"p-2 mt-4\">\r\n              <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"email\">Username</label>\r\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\r\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <div class=\"float-end\">\r\n                      <a href=\"/account/reset-password\" class=\"text-muted\">Forgot password?</a>\r\n                  </div>\r\n                  <label for=\"password\">Password</label>\r\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\"\r\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\" />\r\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-check\">\r\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"auth-remember-check\">\r\n                    <label class=\"form-check-label\" for=\"auth-remember-check\">Remember me</label>\r\n                </div>\r\n                \r\n                <div class=\"mt-3 text-end\">\r\n                    <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Log In</button>\r\n                </div>\r\n                <div class=\"mt-4 text-center\">\r\n                  <div class=\"signin-other-title\">\r\n                      <h5 class=\"font-size-14 mb-3 title\">Sign in with</h5>\r\n                  </div>\r\n                  \r\n                  <ul class=\"list-inline\">\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-primary text-white border-primary\">\r\n                          <i class=\"mdi mdi-facebook\"></i>\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-info text-white border-info\">\r\n                          <i class=\"mdi mdi-twitter\"></i>\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\">\r\n                      <a href=\"javascript:void()\" class=\"social-list-item bg-danger text-white border-danger\">\r\n                          <i class=\"mdi mdi-google\"></i>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div class=\"mt-4 text-center\">\r\n                    <p class=\"mb-0\">Don't have an account ? <a href=\"/account/signup\" class=\"fw-medium text-primary\"> Signup now </a> </p>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"mt-5 text-center\">\r\n          <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-passwordreset',\r\n  templateUrl: './passwordreset.component.html',\r\n  styleUrls: ['./passwordreset.component.scss']\r\n})\r\n\r\n/**\r\n * Reset-password component\r\n */\r\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\r\n\r\n  resetForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  success = '';\r\n  loading = false;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    document.body.setAttribute('class', 'authentication-bg');\r\n    this.resetForm = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.resetForm.controls; }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmit() {\r\n    this.success = '';\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.resetForm.invalid) {\r\n      return;\r\n    }\r\n    if (environment.defaultauth === 'firebase') {\r\n      this.authenticationService.resetPassword(this.f.email.value)\r\n        .catch(error => {\r\n          this.error = error ? error : '';\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"home-btn d-none d-sm-block\">\r\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\r\n</div>\r\n<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n        <div>\r\n\r\n          <a href=\"/\" class=\"mb-5 d-block auth-logo\">\r\n            <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\r\n            <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\r\n          </a>\r\n          <div class=\"card\">\r\n\r\n            <div class=\"card-body p-4\">\r\n\r\n              <div class=\"text-center mt-2\">\r\n                <h5 class=\"text-primary\">Reset Password</h5>\r\n                <p class=\"text-muted\">Reset Password with Minible.</p>\r\n              </div>\r\n              <div class=\"p-2 mt-4\">\r\n                <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\r\n                  Enter your Email and instructions will be sent to you!\r\n                </div>\r\n                <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\"\r\n                  novalidate>\r\n                  <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\r\n\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"email\">Email</label>\r\n                    <input type=\"email\" formControlName=\"email\" class=\"form-control\"\r\n                      [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\r\n\r\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                      <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"mt-3 text-end\">\r\n                    <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Reset</button>\r\n                  </div>\r\n\r\n                  <div class=\"mt-4 text-center\">\r\n                    <p class=\"mb-0\">Remember It ? <a href=\"/account/login\" class=\"fw-medium text-primary\">\r\n                        Signin </a></p>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-5 text-center\">\r\n            <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\r\n          </div>\r\n        </div>\r\n      </div> <!-- end col -->\r\n    </div>\r\n    <!-- end row -->\r\n  </div>\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../../core/services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { first } from 'rxjs/operators';\r\nimport { UserProfileService } from '../../../core/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit, AfterViewInit {\r\n\r\n  signupForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  successmsg = false;\r\n\r\n  // set the currenr year\r\n  year: number = new Date().getFullYear();\r\n\r\n  // tslint:disable-next-line: max-line-length\r\n  constructor(private formBuilder: FormBuilder, \r\n    private route: ActivatedRoute, \r\n    private router: Router, \r\n    private authenticationService: AuthenticationService,\r\n    private userService: UserProfileService) { }\r\n\r\n  ngOnInit() {\r\n    document.body.setAttribute('class', 'authentication-bg');\r\n\r\n    this.signupForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.signupForm.controls; }\r\n\r\n  /**\r\n   * On submit form\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.signupForm.invalid) {\r\n      return;\r\n    } else {\r\n      if (environment.defaultauth === 'firebase') {\r\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\r\n          this.successmsg = true;\r\n          if (this.successmsg) {\r\n            document.body.removeAttribute('class');\r\n            this.router.navigate(['/dashboard']);\r\n          }\r\n        })\r\n          .catch(error => {\r\n            this.error = error ? error : '';\r\n          });\r\n      } else {\r\n        this.userService.register(this.signupForm.value)\r\n          .pipe(first())\r\n          .subscribe(\r\n            data => {\r\n              this.successmsg = true;\r\n              if (this.successmsg) {\r\n                this.router.navigate(['/account/login']);\r\n              }\r\n            },\r\n            error => {\r\n              this.error = error ? error : '';\r\n            });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"home-btn d-none d-sm-block\">\r\n  <a href=\"/\" class=\"text-dark\"><i class=\"mdi mdi-home-variant h2\"></i></a>\r\n</div>\r\n<div class=\"account-pages my-5 pt-sm-5\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n          <div class=\"text-center\">\r\n              <a href=\"/\" class=\"mb-5 d-block auth-logo\">\r\n                  <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"22\" class=\"logo logo-dark\">\r\n                  <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"22\" class=\"logo logo-light\">\r\n              </a>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row align-items-center justify-content-center\">\r\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\r\n          <div class=\"card\">\r\n             \r\n              <div class=\"card-body p-4\"> \r\n\r\n                  <div class=\"text-center mt-2\">\r\n                      <h5 class=\"text-primary\">Register Account</h5>\r\n                      <p class=\"text-muted\">Get your free Minible account now.</p>\r\n                  </div>\r\n                  <div class=\"p-2 mt-4\">\r\n                    <form name=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n\r\n                      <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration successfull.\r\n                      </ngb-alert>\r\n                      \r\n                      <div class=\"mb-3\">\r\n                          <label for=\"username\">Email</label>\r\n                          <input type=\"email\" formControlName=\"email\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\r\n\r\n                          <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n                          </div>     \r\n                      </div>\r\n\r\n                      <div class=\"mb-3\">\r\n                          <label for=\"username\">Username</label>\r\n                          <input type=\"text\" formControlName=\"username\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" id=\"username\" placeholder=\"Enter username\" />\r\n\r\n                          <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.username.errors.required\">Userame is required</div>\r\n                          </div> \r\n                      </div>\r\n\r\n                      <div class=\"mb-3\">\r\n                          <label for=\"userpassword\">Password</label>\r\n                          <!-- <input type=\"password\" class=\"form-control\" id=\"userpassword\" placeholder=\"Enter password\">         -->\r\n                          <input type=\"password\" formControlName=\"password\" class=\"form-control\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\" placeholder=\"Password\" />\r\n\r\n                          <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                          </div>\r\n                      </div>\r\n\r\n                      <div class=\"form-check\">\r\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"auth-terms-condition-check\">\r\n                          <label class=\"form-check-label\" for=\"auth-terms-condition-check\">I accept <a href=\"javascript: void(0);\" class=\"text-dark\">Terms and Conditions</a></label>\r\n                      </div>\r\n                      \r\n                      <div class=\"mt-3 text-end\">\r\n                          <button class=\"btn btn-primary w-sm waves-effect waves-light\" type=\"submit\">Register</button>\r\n                      </div>\r\n\r\n                      <div class=\"mt-4 text-center\">\r\n                          <div class=\"signin-other-title\">\r\n                              <h5 class=\"font-size-14 mb-3 title\">Sign up using</h5>\r\n                          </div>\r\n                          <ul class=\"list-inline\">\r\n                              <li class=\"list-inline-item\">\r\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-primary text-white border-primary\">\r\n                                      <i class=\"mdi mdi-facebook\"></i>\r\n                                  </a>\r\n                              </li>\r\n                              <li class=\"list-inline-item\">\r\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-info text-white border-info\">\r\n                                      <i class=\"mdi mdi-twitter\"></i>\r\n                                  </a>\r\n                              </li>\r\n                              <li class=\"list-inline-item\">\r\n                                  <a href=\"javascript:void()\" class=\"social-list-item bg-danger text-white border-danger\">\r\n                                      <i class=\"mdi mdi-google\"></i>\r\n                                  </a>\r\n                              </li>\r\n                          </ul>\r\n                      </div>\r\n\r\n                      <div class=\"mt-4 text-center\">\r\n                          <p class=\"text-muted mb-0\">Already have an account ? <a href=\"/account/login\" class=\"fw-medium text-primary\"> Login</a></p>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n\r\n              </div>\r\n          </div>\r\n          <div class=\"mt-5 text-center\">\r\n              <p>© {{year}} Minible. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\r\n          </div>\r\n\r\n      </div>\r\n    </div>\r\n    <!-- end row -->\r\n  </div>\r\n  <!-- end container -->\r\n</div>\r\n<!-- end page -->\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { User } from '../models/auth.models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserProfileService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`/api/login`);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`/users/register`, user);\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}